"""add history model for logging activities

Revision ID: a4ac2d255e33
Revises: b703b6676255
Create Date: 2023-12-12 10:20:59.186003

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a4ac2d255e33"
down_revision = "b703b6676255"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=11), nullable=False),
        sa.Column("token_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(length=16), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["active_tokens.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_history_type"), ["type"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_history_user_id"), ["user_id"], unique=False
        )

    connection = op.get_bind()

    connection.execute(
        sa.text(
            """
            DO $$
            DECLARE 
                user_id VARCHAR(11);
            BEGIN
                FOR user_id IN (SELECT id FROM users)
                LOOP
                    -- Insert history log for each user
                    INSERT INTO history (user_id, token_id, type, at)
                    VALUES (user_id, NULL, 'create', NOW());
                END LOOP;
            END $$;
            """
        )
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_history_user_id"))
        batch_op.drop_index(batch_op.f("ix_history_type"))

    op.drop_table("history")
    # ### end Alembic commands ###
