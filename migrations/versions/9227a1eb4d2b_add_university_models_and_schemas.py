"""add university models and schemas

Revision ID: 9227a1eb4d2b
Revises: 
Create Date: 2023-11-04 22:51:59.793023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "9227a1eb4d2b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("alpha2", sa.String(length=2), nullable=False),
        sa.Column("alpha3", sa.String(length=3), nullable=False),
        sa.Column("country_code", sa.String(length=3), nullable=False),
        sa.Column("iso3166_2", sa.String(length=16), nullable=False),
        sa.Column("region", sa.String(length=64), nullable=True),
        sa.Column("subregion", sa.String(length=64), nullable=True),
        sa.Column("region_code", sa.String(length=3), nullable=True),
        sa.Column("sub_region_code", sa.String(length=3), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "alpha2", "alpha3"),
    )
    with op.batch_alter_table("countries", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_countries_alpha2"), ["alpha2"], unique=True
        )
        batch_op.create_index(
            batch_op.f("ix_countries_alpha3"), ["alpha3"], unique=True
        )
        batch_op.create_index(
            batch_op.f("ix_countries_country_code"),
            ["country_code"],
            unique=True,
        )
        batch_op.create_index(
            batch_op.f("ix_countries_iso3166_2"), ["iso3166_2"], unique=True
        )
        batch_op.create_index(
            batch_op.f("ix_countries_name"), ["name"], unique=True
        )

    op.create_table(
        "universities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("short_name", sa.String(length=32), nullable=False),
        sa.Column("full_name", sa.String(length=128), nullable=False),
        sa.Column("established", sa.Integer(), nullable=True),
        sa.Column("former_name", sa.String(length=64), nullable=True),
        sa.Column("motto", sa.String(length=256), nullable=True),
        sa.Column("type", sa.String(length=64), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("full_name"),
    )
    with op.batch_alter_table("universities", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_universities_short_name"),
            ["short_name"],
            unique=True,
        )

    op.create_table(
        "university_campuses",
        sa.Column(
            "address_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("address_number", sa.String(length=16), nullable=False),
        sa.Column("address_street", sa.String(length=64), nullable=False),
        sa.Column("address_city", sa.String(length=64), nullable=False),
        sa.Column("address_state", sa.String(length=64), nullable=False),
        sa.Column("address_zip_code", sa.String(length=16), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("country_code", sa.String(length=2), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_code"],
            ["countries.alpha2"],
        ),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["universities.id"],
        ),
        sa.PrimaryKeyConstraint("address_id"),
        sa.UniqueConstraint(
            "address_number", "address_street", "country_code", "school_id"
        ),
    )
    with op.batch_alter_table("university_campuses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_university_campuses_school_id"),
            ["school_id"],
            unique=False,
        )

    op.create_table(
        "university_domains",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("domain_name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["universities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("domain_name", "school_id"),
    )
    op.create_table(
        "university_founders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("founder_name", sa.String(length=255), nullable=False),
        sa.Column("biography_link", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["universities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("founder_name", "school_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("university_founders")
    op.drop_table("university_domains")
    with op.batch_alter_table("university_campuses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_university_campuses_school_id"))

    op.drop_table("university_campuses")
    with op.batch_alter_table("universities", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_universities_short_name"))

    op.drop_table("universities")
    with op.batch_alter_table("countries", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_countries_name"))
        batch_op.drop_index(batch_op.f("ix_countries_iso3166_2"))
        batch_op.drop_index(batch_op.f("ix_countries_country_code"))
        batch_op.drop_index(batch_op.f("ix_countries_alpha3"))
        batch_op.drop_index(batch_op.f("ix_countries_alpha2"))

    op.drop_table("countries")
    # ### end Alembic commands ###
