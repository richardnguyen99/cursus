"""update history model for token_used

Revision ID: aa1de661b0ce
Revises: a4ac2d255e33
Create Date: 2023-12-12 15:45:21.193265

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "aa1de661b0ce"
down_revision = "a4ac2d255e33"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("accounts", schema=None) as batch_op:
        batch_op.alter_column(
            "provider",
            existing_type=sa.VARCHAR(length=256),
            type_=sa.String(length=16),
            existing_nullable=False,
        )

    with op.batch_alter_table("history", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("token_used", sa.String(length=64), nullable=True)
        )
        batch_op.alter_column(
            "type",
            existing_type=sa.VARCHAR(length=16),
            type_=sa.String(length=32),
            existing_nullable=False,
        )
        batch_op.create_index(
            batch_op.f("ix_history_token_used"), ["token_used"], unique=False
        )
        batch_op.drop_constraint("history_token_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "active_tokens", ["token_used"], ["token"]
        )
        batch_op.drop_column("token_id")

    connection = op.get_bind()

    connection.execute(
        sa.text(
            """
DO $$
DECLARE
    user_id VARCHAR(11);
    user_provider VARCHAR(16);
BEGIN
    CREATE TEMPORARY TABLE tmp_users AS
        SELECT U.id as id, A.provider as provider  FROM users AS U
        JOIN accounts AS A
            ON A."userId" = U.id;

    FOR user_id, user_provider IN (SELECT id, provider FROM tmp_users)
    LOOP
        -- Insert history log for each user
        INSERT INTO history (user_id, token_used, type, at) VALUES
        (user_id, NULL, 'register ('|| user_provider ||')', NOW());

    END LOOP;
END $$;
            """
        )
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("history", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "token_id", sa.INTEGER(), autoincrement=False, nullable=True
            )
        )
        batch_op.create_foreign_key(
            "history_token_id_fkey",
            "active_tokens",
            ["token_id"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )
        batch_op.drop_index(batch_op.f("ix_history_token_used"))
        batch_op.alter_column(
            "type",
            existing_type=sa.String(length=32),
            type_=sa.VARCHAR(length=16),
            existing_nullable=False,
        )
        batch_op.drop_column("token_used")

    with op.batch_alter_table("accounts", schema=None) as batch_op:
        batch_op.alter_column(
            "provider",
            existing_type=sa.String(length=16),
            type_=sa.VARCHAR(length=256),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
